pipeline {
    agent any

    tools {
        jdk 'JAVA_HOME'
        maven 'M2_HOME'
    }

    stages {
        stage('GIT') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/Sleheddine34/Projet-DevOps.git'
            }
        }
        
        stage('Compile Stage') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh "mvn clean verify sonar:sonar -DskipTests -Dsonar.projectKey=tp-foyer -Dsonar.host.url=http://192.168.50.5:9000 -Dsonar.login=\$SONAR_TOKEN"
                }
            }
        }

        stage('Deploy to Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                    sh '''
                        mvn deploy -DskipTests \
                        -DaltDeploymentRepository=deploymentRepo::default::http://$NEXUS_USER:$NEXUS_PASS@192.168.50.5:8081/repository/maven-releases/
                    '''
                }
            }
        }
         stage('Build Docker Image') {
            steps {
                // Build the Docker image with your specified tag
                sh 'docker build -t medhelmibennnjima/tp-foyer:5.0.0 .'
            }
        }
         stage('Deploy with Docker Compose') {
    steps {
        script {
            // List the contents of the current directory to confirm the presence of docker-compose.yml
            sh 'ls -la'
            // Run Docker Compose to bring up services from the file in the repository
            sh 'docker-compose -f ./docker-compose.yml up -d'
        }
    }
}
    }
}
